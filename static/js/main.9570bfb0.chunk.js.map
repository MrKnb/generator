{"version":3,"sources":["components/quicknav/QuickNav.module.css","components/form/Form.module.css","components/header/Header.module.css","components/canvas/Canvas.module.css","assets/trump-lightning.gif","components/statecontext/stateContext.js","components/header/Header.js","components/quicknav/QuickNav.js","components/canvas/Canvas.js","components/form/Form.js","components/toolbar/Toolbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StateContext","createContext","StateContextProvider","children","useState","theme","setTheme","picdatanew","setPicdatanew","quotenew","setQuotenew","picID","setPicID","randomQuoteName","setRandomQuoteName","pers","setPers","Color","Width","grafitiParam","setGrafitiParam","textColor","fontSize","blurWidth","blurColor","threeDColor","font","textParam","setTextParam","toptext","bottomtext","textInput","setTextInput","myImage","setMyImage","useEffect","fetch","then","response","json","rep","memes","hits","Provider","value","Header","useContext","setSingquote","length","long","messages","non_personalized","randomnume","Math","floor","random","setInterval","randomnum","singlequote","className","Styles","container","titleFlex","src","require","alt","img","graffitiText","HideAndShowDivOnClick","showDiv","setShowDiv","chips","setChips","getInfo","e","target","id","undefined","map","v","i","key","onClick","type","previewURL","quicklistPic","quicklistContainer","quicklistBtn","download","href","downloadBtn","tabs","quicklistContent","boxes","inputs","onChange","min","max","fontContainer","wrapper1","psize","indieFlower","kaushanScript","pacifico","wrapper2","vt323","wallpoet","bebasNeue","wrapper3","monoton","bangers","piedra","wrapper4","frederickaTheGreat","homemadeApple","vastShadow","Canvas","contextRef","useRef","canvasRef","isDrawing","setIsDrawing","width","height","canvassize","setCanvasSize","picturedata","setPicturedata","lined","setLined","wholedata","setWholedata","startpos","setStartpos","singleQ","setSingleQ","mouseTouch","setMouseTouch","context","current","getContext","Image","webformatURL","setAttribute","webformatWidth","webformatHeight","setTimeout","drawImage","image","toDataURL","startDrawing","nativeEvent","strokeStyle","lineWidth","shadowBlur","lineCap","beginPath","LineColor","LineWidth","xy","offsetX","offsetY","moveTo","previous","nn","targetTouches","pageX","offsetLeft","pageY","offsetTop","draw","lineTo","fishX","gp","stroke","finishDrawing","newStartStop","movT","lineT","ln","drawforrandom","singleq","message","measureText","start","clearRect","z","drawagain","shadowColor","fillStyle","fillText","starth","longtop","starttop","longbottom","startbottom","drawagainline","retry","lengt","personalized","canvasContainer","ref","onMouseDown","document","getElementsByTagName","style","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","canvas","Form","forminp","inputinp","name","placeholder","ToolBar","setNewTheme","themeName","Toolbar","active","App","QuickNav","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.9570bfb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quicklistContainer\":\"QuickNav_quicklistContainer__2HaxR\",\"quicklistContent\":\"QuickNav_quicklistContent__2ZNVO\",\"quicklistBtn\":\"QuickNav_quicklistBtn__QuV_v\",\"downloadBtn\":\"QuickNav_downloadBtn__2G2kR\",\"container\":\"QuickNav_container__l5Pvl\",\"tabs\":\"QuickNav_tabs__3J0_z\",\"boxes\":\"QuickNav_boxes__YONNh\",\"quicklistPic\":\"QuickNav_quicklistPic__3rgER\",\"listactive\":\"QuickNav_listactive__AdGi2\",\"inputs\":\"QuickNav_inputs__3PQkq\",\"hide\":\"QuickNav_hide__DLvJ0\",\"list\":\"QuickNav_list__2T2H9\",\"fontContainer\":\"QuickNav_fontContainer__1vzeG\",\"wrapper1\":\"QuickNav_wrapper1__1mEwe\",\"wrapper2\":\"QuickNav_wrapper2__1cfzo\",\"wrapper3\":\"QuickNav_wrapper3__3PgXi\",\"wrapper4\":\"QuickNav_wrapper4__1veXk\",\"indieFlower\":\"QuickNav_indieFlower__1V2pg\",\"kaushanScript\":\"QuickNav_kaushanScript__3yoKQ\",\"pacifico\":\"QuickNav_pacifico__3IzQt\",\"homemadeApple\":\"QuickNav_homemadeApple__yhRXr\",\"wallpoet\":\"QuickNav_wallpoet__1xbt0\",\"robotoMono\":\"QuickNav_robotoMono__2gADR\",\"bebasNeue\":\"QuickNav_bebasNeue__1b4c1\",\"monoton\":\"QuickNav_monoton__2gRu5\",\"bangers\":\"QuickNav_bangers__1VqLS\",\"piedra\":\"QuickNav_piedra__6CQwd\",\"frederickaTheGreat\":\"QuickNav_frederickaTheGreat__34L0U\",\"vt323\":\"QuickNav_vt323__8is-p\",\"vastShadow\":\"QuickNav_vastShadow__OMEnI\",\"button\":\"QuickNav_button__1evMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forminp\":\"Form_forminp__3uDvA\",\"inputinp\":\"Form_inputinp__GJBmE\",\"graffitiText\":\"Form_graffitiText__pOO0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__27QFJ\",\"quotes\":\"Header_quotes__34L-N\",\"img\":\"Header_img__21Pvn\",\"titleFlex\":\"Header_titleFlex__2NFbt\",\"graffitiText\":\"Header_graffitiText__6z98G\",\"quotemark\":\"Header_quotemark__1TIPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__2dajL\"};","module.exports = __webpack_public_path__ + \"static/media/trump-lightning.35210047.gif\";","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const StateContext = createContext({});\n\nexport default function StateContextProvider({ children }) {\n  const [theme, setTheme] = useState(\"light\");\n  const [picdatanew, setPicdatanew] = useState([]);\n  const [quotenew, setQuotenew] = useState([]);\n  const [picID, setPicID] = useState(0);\n  const [randomQuoteName, setRandomQuoteName] = useState(\"Robert\");\n  const [pers, setPers] = useState(false);\n  const [grafitiParam, setGrafitiParam] = useState({\n    Color: \"#FFFF00\",\n    Width: 10,\n  });\n  const [textParam, setTextParam] = useState({\n    textColor: \"#FFFFFF\",\n    fontSize: 40,\n    blurWidth: 10,\n    blurColor: \"#000000\",\n    threeDColor: \"#737a75\",\n    font: \"Arial\",\n  });\n  const [textInput, setTextInput] = useState({ toptext: \"\", bottomtext: \"\" });\n  const [myImage, setMyImage] = useState();\n\n  useEffect(() => {\n    fetch(\n      \"https://pixabay.com/api/?key=17706064-dbf47c15f3ffee1df9f90dd47&q=donald+trump&image_type=all&per_page=200\"\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (rep) {\n        const memes = rep.hits;\n        setPicdatanew(memes);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://api.whatdoestrumpthink.com/api/v1/quotes\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (rep) {\n        setQuotenew(rep);\n      });\n  }, []);\n\n  return (\n    <StateContext.Provider\n      value={{\n        picdatanew,\n        quotenew,\n        picID,\n        setPicID,\n        grafitiParam,\n        setGrafitiParam,\n        textParam,\n        setTextParam,\n        theme,\n        setTheme,\n        textInput,\n        setTextInput,\n        pers,\n        setPers,\n        randomQuoteName,\n        setRandomQuoteName,\n        myImage,\n        setMyImage,\n      }}\n    >\n      {children}\n    </StateContext.Provider>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { StateContext } from \"../statecontext/stateContext\";\nimport Styles from \"./Header.module.css\";\n\nexport default function Header() {\n  const { quotenew } = useContext(StateContext);\n  const [singquote, setSingquote] = useState();\n\n  useEffect(() => {\n    singlequote();\n    function singlequote() {\n      if (quotenew.length !== 0) {\n        const long = quotenew.messages.non_personalized.length - 1;\n        const randomnume = Math.floor(Math.random() * long);\n        setSingquote(quotenew.messages.non_personalized[randomnume]);\n        setInterval(() => {\n          const randomnum = Math.floor(Math.random() * long);\n          setSingquote(quotenew.messages.non_personalized[randomnum]);\n        }, 30000);\n      }\n    }\n  }, [quotenew]);\n\n  return (\n    <div className={Styles.container}>\n      <div className={Styles.titleFlex}>\n        <img\n          src={require(\"../../assets/trump-lightning.gif\")}\n          alt=\"trump\"\n          className={Styles.img}\n        />\n        <h1>\n          Trump <span className={Styles.graffitiText}>GRAFFITI</span> Memes\n        </h1>\n      </div>\n      {/* <h3 className={Styles.quotes}>\n        <span className={Styles.quotemark}>\" </span>\n        {singquote}\n        <span className={Styles.quotemark}> \"</span>\n      </h3> */}\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { StateContext } from \"../statecontext/stateContext\";\nimport Styles from \"./QuickNav.module.css\";\nimport \"react-tabs/style/react-tabs.css\";\n\nfunction HideAndShowDivOnClick() {\n  const {\n    picdatanew,\n    setPicID,\n    grafitiParam,\n    setGrafitiParam,\n    textParam,\n    setTextParam,\n    myImage,\n  } = useContext(StateContext);\n  const [showDiv, setShowDiv] = useState(false);\n  const [chips, setChips] = useState();\n\n  function getInfo(e) {\n    setPicID(e.target.id);\n  }\n\n  useEffect(() => {\n    if (picdatanew !== undefined) {\n      setChips(\n        picdatanew.map((v, i) => (\n          <img\n            key={i}\n            id={i}\n            onClick={getInfo}\n            type=\"image\"\n            src={v.previewURL}\n            alt=\"choice image\"\n            className={Styles.quicklistPic}\n          />\n        ))\n      );\n    }\n  }, [picdatanew]);\n\n  return (\n    <div className={Styles.quicklistContainer}>\n      <button\n        className={Styles.quicklistBtn}\n        onClick={() => setShowDiv(!showDiv)}\n      >\n        {showDiv ? \"Hide\" : \"Customize\"}\n      </button>\n\n      <a download=\"meme.jpg\" href={myImage}>\n        <button className={Styles.downloadBtn}>Download</button>\n      </a>\n\n      {showDiv && (\n        <Tabs className={Styles.tabs}>\n          <TabList>\n            <Tab>Donald</Tab>\n            <Tab>Text</Tab>\n            <Tab>Font</Tab>\n            <Tab>Graffiti</Tab>\n          </TabList>\n\n          <TabPanel>\n            {/* <ul className=\"quicklist-content\">{chips}</ul> */}\n            <ul className={Styles.quicklistContent}>{chips}</ul>\n          </TabPanel>\n          <TabPanel>\n            <div className={Styles.container}>\n              <div className={Styles.boxes}>\n                <input\n                  className={Styles.inputs}\n                  type=\"color\"\n                  value={textParam.textColor}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, textColor: e.target.value })\n                  }\n                />\n                <label>TEXT COLOR</label>\n              </div>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"color\"\n                  className={Styles.inputs}\n                  value={textParam.blurColor}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, blurColor: e.target.value })\n                  }\n                />\n                <label>BLUR COLOR</label>\n              </div>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"color\"\n                  className={Styles.inputs}\n                  value={textParam.threeDColor}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, threeDColor: e.target.value })\n                  }\n                />\n                <label>3D COLOR</label>\n              </div>\n\n              <div className={Styles.boxes}>\n                <input\n                  type=\"range\"\n                  className={Styles.inputs}\n                  value={textParam.fontSize}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, fontSize: e.target.value })\n                  }\n                  min=\"10\"\n                  max=\"50\"\n                />\n                <label>FONT SIZE: {textParam.fontSize}px</label>\n              </div>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"range\"\n                  className={Styles.inputs}\n                  value={textParam.blurWidth}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, blurWidth: e.target.value })\n                  }\n                  min=\"0\"\n                  max=\"40\"\n                />\n                <label>BLUR WIDTH: {textParam.blurWidth}</label>\n              </div>\n            </div>\n          </TabPanel>\n          <TabPanel>\n            <div className={Styles.fontContainer}>\n              <div className={Styles.wrapper1}>\n                <p\n                  className={Styles.psize}\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Indie Flower\" })\n                  }\n                  className={Styles.indieFlower}\n                >\n                  Indie Flower\n                </p>\n                <p\n                  className={Styles.psize}\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Kaushan Script\" })\n                  }\n                  className={Styles.kaushanScript}\n                >\n                  Kaushan Script\n                </p>\n                <p\n                  className={Styles.psize}\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Pacifico\" })\n                  }\n                  className={Styles.pacifico}\n                >\n                  Pacifico\n                </p>\n              </div>\n\n              <div className={Styles.wrapper2}>\n                <p\n                  onClick={() => setTextParam({ ...textParam, font: \"VT323\" })}\n                  className={Styles.vt323}\n                >\n                  VT323\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Wallpoet\" })\n                  }\n                  className={Styles.wallpoet}\n                >\n                  Wallpoet\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Bebas Neue\" })\n                  }\n                  className={Styles.bebasNeue}\n                >\n                  Bebas Neue\n                </p>\n              </div>\n              <div className={Styles.wrapper3}>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Monoton\" })\n                  }\n                  className={Styles.monoton}\n                >\n                  Monoton\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Bangers\" })\n                  }\n                  className={Styles.bangers}\n                >\n                  Bangers\n                </p>\n                <p\n                  onClick={() => setTextParam({ ...textParam, font: \"Piedra\" })}\n                  className={Styles.piedra}\n                >\n                  Piedra\n                </p>\n              </div>\n              <div className={Styles.wrapper4}>\n                <p\n                  onClick={() =>\n                    setTextParam({\n                      ...textParam,\n                      font: \"Fredericka the Great\",\n                    })\n                  }\n                  className={Styles.frederickaTheGreat}\n                >\n                  Fredericka the Great\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Homemade Apple\" })\n                  }\n                  className={Styles.homemadeApple}\n                >\n                  Homemade Apple\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Vast Shadow\" })\n                  }\n                  className={Styles.vastShadow}\n                >\n                  {\" \"}\n                  Vast Shadow\n                </p>\n              </div>\n              {/* </ul> */}\n            </div>\n          </TabPanel>\n          <TabPanel>\n            <div className={Styles.container}>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"color\"\n                  className={Styles.inputs}\n                  value={grafitiParam.Color}\n                  onChange={(e) =>\n                    setGrafitiParam({ ...grafitiParam, Color: e.target.value })\n                  }\n                />\n                <label>Grafiti COLOR</label>\n              </div>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"range\"\n                  className={Styles.inputs}\n                  value={grafitiParam.Width}\n                  onChange={(e) =>\n                    setGrafitiParam({ ...grafitiParam, Width: e.target.value })\n                  }\n                  min=\"1\"\n                  max=\"40\"\n                />\n                <label>Grafiti WIDTH: {grafitiParam.Width}</label>\n              </div>\n            </div>\n          </TabPanel>\n        </Tabs>\n      )}\n    </div>\n  );\n}\n\nexport default HideAndShowDivOnClick;\n","import React, { useRef, useEffect, useState, useContext } from \"react\";\nimport Styles from \"./Canvas.module.css\";\nimport { StateContext } from \"../statecontext/stateContext\";\n\nexport default function Canvas() {\n  const {\n    picdatanew,\n    quotenew,\n    picID,\n    grafitiParam,\n    textParam,\n    textInput,\n    setTextInput,\n    pers,\n    setPers,\n    randomQuoteName,\n    setMyImage,\n  } = useContext(StateContext);\n  const contextRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [canvassize, setCanvasSize] = useState({ width: 800, height: 800 });\n\n  const [picturedata, setPicturedata] = useState();\n  const [lined, setLined] = useState([]);\n  const [wholedata, setWholedata] = useState([]);\n  const [startpos, setStartpos] = useState([]);\n  const [singleQ, setSingleQ] = useState(\"\");\n  const [mouseTouch, setMouseTouch] = useState(true);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    contextRef.current = context;\n    contextRef.current.font = \"bold 20px Roman\";\n  }, []);\n\n  //show the selected picture\n  useEffect(() => {\n    const img = new Image();\n    if (picdatanew.length !== 0) {\n      img.src = picdatanew[picID].webformatURL;\n      img.setAttribute(\"crossorigin\", \"anonymous\");\n      setCanvasSize({\n        width: picdatanew[picID].webformatWidth,\n        height: picdatanew[picID].webformatHeight,\n      });\n      setPicturedata(img);\n      setWholedata([]);\n\n      setTimeout(() => {\n        contextRef.current.drawImage(\n          img,\n          0,\n          0,\n          picdatanew[picID].webformatWidth,\n          picdatanew[picID].webformatHeight\n        );\n        var image = canvasRef.current.toDataURL(\"image/jpg\");\n        setMyImage(image);\n      }, 2000);\n    }\n  }, [picID, picdatanew]);\n\n  // draw, set a starting point and an end point\n  const startDrawing = ({ nativeEvent }) => {\n    contextRef.current.strokeStyle = grafitiParam.Color;\n    contextRef.current.lineWidth = grafitiParam.Width;\n    contextRef.current.shadowBlur = 0;\n    contextRef.current.lineCap = \"round\";\n    contextRef.current.beginPath();\n    const LineColor = grafitiParam.Color;\n    const LineWidth = grafitiParam.Width;\n    setIsDrawing(true);\n    setStartpos([]);\n    setLined([]);\n\n    if (mouseTouch) {\n      const { offsetX, offsetY } = nativeEvent;\n      const xy = [offsetX, offsetY, LineColor, LineWidth];\n      contextRef.current.moveTo(xy[0], xy[1]);\n      setStartpos((previous) => [...previous, xy]);\n    } else {\n      const nn = nativeEvent.targetTouches[0];\n      const xy = [\n        nn.pageX - nn.target.offsetLeft,\n        nn.pageY - nn.target.offsetTop,\n        LineColor,\n        LineWidth,\n      ];\n      contextRef.current.moveTo(xy[0], xy[1]);\n      setStartpos((previous) => [...previous, xy]);\n    }\n  };\n\n  // folow the cursor and draw\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    if (mouseTouch) {\n      const { offsetX, offsetY } = nativeEvent;\n      contextRef.current.lineTo(offsetX, offsetY);\n      const fishX = { offsetX, offsetY };\n      setLined((gp) => [...gp, fishX]);\n    } else {\n      const offsetX =\n        nativeEvent.targetTouches[0].pageX -\n        nativeEvent.targetTouches[0].target.offsetLeft;\n      const offsetY =\n        nativeEvent.targetTouches[0].pageY -\n        nativeEvent.targetTouches[0].target.offsetTop;\n      contextRef.current.lineTo(offsetX, offsetY);\n      const fishX = { offsetX, offsetY };\n      setLined((gp) => [...gp, fishX]);\n    }\n    contextRef.current.stroke();\n  };\n\n  //finish the drawing process and construct the data Array\n  const finishDrawing = () => {\n    const newStartStop = { movT: startpos, lineT: lined };\n    setWholedata((ln) => [...ln, newStartStop]);\n    setIsDrawing(false);\n    var image = canvasRef.current.toDataURL(\"image/jpg\");\n    setMyImage(image);\n  };\n\n  //function generater(){\n  useEffect(() => {\n    if (textInput.toptext.length !== 0 || textInput.bottomtext.length !== 0) {\n      contextRef.current.font =\n        \"bold \" + textParam.fontSize + \"px \" + textParam.font;\n      const longtop = Math.floor(\n        contextRef.current.measureText(textInput.toptext).width\n      );\n      const starttop = canvassize.width / 2 - longtop / 2;\n      const longbottom = Math.floor(\n        contextRef.current.measureText(textInput.bottomtext).width\n      );\n      const startbottom = canvassize.width / 2 - longbottom / 2;\n\n      contextRef.current.clearRect(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n      );\n      contextRef.current.drawImage(picturedata, 0, 0);\n\n      drawagainline();\n\n      function drawagainline() {\n        contextRef.current.shadowBlur = 0;\n        var z;\n        for (z = 0; z < wholedata.length; z++) {\n          contextRef.current.lineWidth = wholedata[z].movT[0][3];\n          contextRef.current.strokeStyle = wholedata[z].movT[0][2];\n          contextRef.current.lineCap = \"round\";\n          contextRef.current.beginPath();\n\n          var i;\n          contextRef.current.moveTo(\n            wholedata[z].movT[0][0],\n            wholedata[z].movT[0][1]\n          );\n\n          for (i = 0; i < wholedata[z].lineT.length; i++) {\n            contextRef.current.lineTo(\n              wholedata[z].lineT[i].offsetX,\n              wholedata[z].lineT[i].offsetY\n            );\n            contextRef.current.stroke();\n          }\n        }\n      }\n\n      contextRef.current.shadowColor = textParam.blurColor;\n      contextRef.current.shadowBlur = textParam.blurWidth;\n      contextRef.current.fillStyle = \"black\";\n      contextRef.current.fillText(\n        textInput.toptext,\n        starttop + 6,\n        50 + 6,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.bottomtext,\n        startbottom + 6,\n        canvassize.height - 44,\n        canvassize.width - 30\n      );\n      contextRef.current.fillStyle = textParam.threeDColor;\n      contextRef.current.fillText(\n        textInput.toptext,\n        starttop + 4,\n        50 + 4,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.toptext,\n        starttop + 2,\n        50 + 2,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.bottomtext,\n        startbottom + 4,\n        canvassize.height - 46,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.bottomtext,\n        startbottom + 2,\n        canvassize.height - 48,\n        canvassize.width - 30\n      );\n      contextRef.current.fillStyle = textParam.textColor;\n      contextRef.current.fillText(\n        textInput.toptext,\n        starttop,\n        50,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.bottomtext,\n        startbottom,\n        canvassize.height - 50,\n        canvassize.width - 30\n      );\n    }\n    var image = canvasRef.current.toDataURL(\"image/jpg\");\n    setMyImage(image);\n  }, [textInput, textParam]);\n\n  //generate the random text\n  useEffect(() => {\n    if (quotenew.length !== 0) {\n      retry();\n    }\n\n    function retry() {\n      const lengt = quotenew.messages.personalized.length;\n      const randomnum = Math.floor(Math.random() * lengt - 1);\n      const singleq = quotenew.messages.personalized[randomnum];\n\n      contextRef.current.font = \"bold 50px \" + textParam.font;\n      const message = randomQuoteName + \" \" + singleq;\n      const long = Math.floor(contextRef.current.measureText(message).width);\n      contextRef.current.font =\n        \"bold \" + textParam.fontSize + \"px \" + textParam.font;\n\n      if (long < canvassize.width) {\n        setSingleQ(singleq);\n        drawforrandom(singleq);\n        //setPers(false)\n        setTextInput({ toptext: \"\", bottomtext: \"\" });\n      } else {\n        retry();\n      }\n    }\n  }, [pers]);\n\n  // allow text modification of the random quote\n  useEffect(() => {\n    if (textInput.toptext.length === 0 && textInput.bottomtext.length === 0) {\n      contextRef.current.font =\n        \"bold \" + textParam.fontSize + \"px \" + textParam.font;\n      drawforrandom(singleQ);\n    }\n  }, [textInput, textParam]);\n\n  // put the generated text on the canvas\n  function drawforrandom(singleq) {\n    if (picturedata !== undefined || singleQ !== \"\") {\n      contextRef.current.font =\n        \"bold \" + textParam.fontSize + \"px \" + textParam.font;\n      const message = randomQuoteName + \" \" + singleq;\n      const long = Math.floor(contextRef.current.measureText(message).width);\n      const start = canvassize.width / 2 - long / 2;\n      const starth = 50;\n      contextRef.current.clearRect(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n      );\n      contextRef.current.drawImage(picturedata, 0, 0);\n\n      drawagain();\n      function drawagain() {\n        contextRef.current.shadowBlur = 0;\n        contextRef.current.lineWidth = 10;\n        if (wholedata.length !== 0) {\n          var z;\n          for (z = 0; z < wholedata.length; z++) {\n            contextRef.current.lineWidth = wholedata[z].movT[0][3];\n            contextRef.current.strokeStyle = wholedata[z].movT[0][2];\n            contextRef.current.lineCap = \"round\";\n\n            contextRef.current.beginPath();\n\n            var i;\n            contextRef.current.moveTo(\n              wholedata[z].movT[0][0],\n              wholedata[z].movT[0][1]\n            );\n\n            for (i = 0; i < wholedata[z].lineT.length; i++) {\n              contextRef.current.lineTo(\n                wholedata[z].lineT[i].offsetX,\n                wholedata[z].lineT[i].offsetY\n              );\n            }\n            contextRef.current.stroke();\n          }\n        }\n      }\n      contextRef.current.shadowColor = textParam.blurColor;\n      contextRef.current.shadowBlur = textParam.blurWidth;\n      contextRef.current.fillStyle = \"black\";\n      contextRef.current.fillText(\n        randomQuoteName + \" \" + singleq,\n        start + 6,\n        starth + 6,\n        canvassize.width - 30\n      );\n      contextRef.current.fillStyle = textParam.threeDColor;\n      contextRef.current.fillText(\n        randomQuoteName + \" \" + singleq,\n        start + 4,\n        starth + 4,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        randomQuoteName + \" \" + singleq,\n        start + 2,\n        starth + 2,\n        canvassize.width - 30\n      );\n\n      contextRef.current.fillStyle = textParam.textColor;\n      contextRef.current.fillText(\n        randomQuoteName + \" \" + singleq,\n        start,\n        starth,\n        canvassize.width - 30\n      );\n\n      var image = canvasRef.current.toDataURL(\"image/jpg\");\n      setMyImage(image);\n    }\n  }\n\n  return (\n    <div className={Styles.canvasContainer}>\n      <canvas\n        ref={canvasRef}\n        onMouseDown={(e) => {\n          startDrawing(e);\n          document.getElementsByTagName(\"body\")[0].style = \"overflow: visible\";\n          setMouseTouch(true);\n        }}\n        onMouseUp={(e) => {\n          finishDrawing(e);\n          document.getElementsByTagName(\"body\")[0].style = \"overflow: visible\";\n          setMouseTouch(true);\n        }}\n        onMouseMove={(e) => {\n          draw(e);\n          setMouseTouch(true);\n        }}\n        onTouchStart={(e) => {\n          startDrawing(e);\n          document.getElementsByTagName(\"body\")[0].style = \"overflow: hidden\";\n          setMouseTouch(false);\n        }}\n        onTouchEnd={(e) => {\n          finishDrawing(e);\n          document.getElementsByTagName(\"body\")[0].style = \"overflow: visible\";\n          setMouseTouch(false);\n        }}\n        onTouchMove={(e) => {\n          draw(e);\n          setMouseTouch(false);\n        }}\n        width={canvassize.width}\n        height={canvassize.height}\n        className={Styles.canvas}\n      ></canvas>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Styles from \"./Form.module.css\";\nimport { StateContext } from \"../statecontext/stateContext\";\n\nexport default function Form() {\n  const {\n    textInput,\n    setTextInput,\n    pers,\n    setPers,\n    setRandomQuoteName,\n  } = useContext(StateContext);\n\n  return (\n    <div>\n      <form className={Styles.forminp}>\n        <h4>Great memes start with funny text!</h4>\n        <input\n          className={Styles.inputinp}\n          type=\"text\"\n          name=\"topText\"\n          placeholder=\"Enter your\"\n          onChange={(e) =>\n            setTextInput({ ...textInput, toptext: e.target.value })\n          }\n        />\n        <input\n          className={Styles.inputinp}\n          type=\"text\"\n          name=\"bottomText\"\n          placeholder=\"Text here\"\n          onChange={(e) =>\n            setTextInput({ ...textInput, bottomtext: e.target.value })\n          }\n        />\n      </form>\n      <div>\n        <h4>or.. add a random quote</h4>\n        <input\n          type=\"text\"\n          placeholder=\"Enter *name* for quote here\"\n          className={Styles.inputinp}\n          onChange={(e) => setRandomQuoteName(e.target.value)}\n        />\n        <button\n          onClick={() => {\n            setPers(!pers);\n          }}\n        >\n          Generate\n        </button>\n        <p>\n          (Pssst... Don't forget to{\" \"}\n          <span className={Styles.graffitiText}>DRAW ON DONALD</span>!)\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { StateContext } from \"../statecontext/stateContext\";\nimport Styles from \"./Toolbar.module.css\";\n\nexport default function ToolBar() {\n  const { theme, setTheme } = useContext(StateContext);\n\n  const setNewTheme = (themeName) => {\n    setTheme(themeName);\n  };\n\n  return (\n    <div className={Styles.Toolbar}>\n      {theme === \"light\" ? (\n        <button\n          // type=\"image\"\n          className={theme === \"dark\" ? Styles.active : \"\"}\n          onClick={() => setNewTheme(\"dark\")}\n        >\n          🌙\n        </button>\n      ) : (\n        <button\n          // type=\"image\"\n          className={theme === \"light\" ? Styles.active : \"\"}\n          onClick={() => setNewTheme(\"light\")}\n        >\n          💡\n        </button>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport Header from \"./components/header/Header\";\nimport QuickNav from \"./components/quicknav/QuickNav\";\nimport Canvas from \"./components/canvas/Canvas\";\nimport Form from \"./components/form/Form\";\nimport ToolBar from \"./components/toolbar/Toolbar\";\nimport { StateContext } from \"./components/statecontext/stateContext\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const { theme } = useContext(StateContext);\n\n  return (\n    <div id=\"main\" className={`App ${theme}`}>\n      <div className=\"flex-header-container\">\n        <Header className=\"flex-header-left\" />\n        <ToolBar />\n      </div>\n      <div className=\"flex-body-container\">\n        <Form className=\"flex-wrapper-left\" />\n        <Canvas className=\"flex-wrapper-right\" />\n      </div>\n      <QuickNav />\n      <div className=\"yellowBanner\">\n        <p>\n          Share your memes on{\" \"}\n          <a href=\"https://twitter.com/hashtag/trumpgraffitimemes\">\n            #trumpgraffitimemes\n          </a>{\" \"}\n          and please don't forget to vote on <span>3rd November 2020</span>!\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport StateContextProvider from \"./components/statecontext/stateContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateContextProvider>\n        <App />\n    </StateContextProvider>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}