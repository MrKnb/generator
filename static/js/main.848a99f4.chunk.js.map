{"version":3,"sources":["components/quicknav/QuickNav.module.css","components/form/Form.module.css","components/header/Header.module.css","components/canvas/Canvas.module.css","assets/trump-lightning.gif","components/statecontext/stateContext.js","components/header/Header.js","components/quicknav/QuickNav.js","components/canvas/Canvas.js","components/form/Form.js","components/toolbar/Toolbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StateContext","createContext","StateContextProvider","children","useState","theme","setTheme","picdatanew","setPicdatanew","quotenew","setQuotenew","picID","setPicID","randomQuoteName","setRandomQuoteName","pers","setPers","Color","Width","grafitiParam","setGrafitiParam","textColor","fontSize","blurWidth","blurColor","threeDColor","font","textParam","setTextParam","toptext","bottomtext","textInput","setTextInput","myImage","setMyImage","canvasClear","setCanvasClear","useEffect","fetch","then","response","json","rep","memes","hits","Provider","value","Header","useContext","setSingquote","length","long","messages","non_personalized","randomnume","Math","floor","random","setInterval","randomnum","singlequote","className","Styles","container","titleFlex","src","require","alt","img","graffitiText","HideAndShowDivOnClick","showDiv","setShowDiv","chips","setChips","getInfo","e","target","id","undefined","map","v","i","key","onClick","type","previewURL","quicklistPic","quicklistContainer","quicklistBtn","resetBtn","download","href","downloadBtn","tabs","quicklistContent","boxes","inputs","onChange","min","max","fontContainer","wrapper1","psize","indieFlower","kaushanScript","pacifico","wrapper2","vt323","wallpoet","bebasNeue","wrapper3","monoton","bangers","piedra","wrapper4","frederickaTheGreat","homemadeApple","vastShadow","Canvas","contextRef","useRef","canvasRef","isDrawing","setIsDrawing","width","height","canvassize","setCanvasSize","picturedata","setPicturedata","lined","setLined","wholedata","setWholedata","startpos","setStartpos","singleQ","setSingleQ","mouseTouch","setMouseTouch","context","current","getContext","Image","webformatURL","setAttribute","webformatWidth","webformatHeight","setTimeout","drawImage","image","toDataURL","startDrawing","nativeEvent","strokeStyle","lineWidth","shadowBlur","lineCap","beginPath","LineColor","LineWidth","sizechange","window","innerWidth","xy","offsetX","offsetY","moveTo","previous","nn","targetTouches","pageX","offsetLeft","pageY","offsetTop","draw","lineTo","fishX","gp","stroke","finishDrawing","newStartStop","movT","lineT","ln","drawforrandom","singleq","message","measureText","start","clearRect","z","drawagain","shadowColor","fillStyle","fillText","starth","longtop","starttop","longbottom","startbottom","drawagainline","retry","lengt","personalized","canvasContainer","ref","onMouseDown","document","getElementsByTagName","style","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","canvas","Form","forminp","inputinp","name","placeholder","ToolBar","setNewTheme","themeName","Toolbar","active","App","QuickNav","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.848a99f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quicklistContainer\":\"QuickNav_quicklistContainer__2HaxR\",\"quicklistContent\":\"QuickNav_quicklistContent__2ZNVO\",\"quicklistBtn\":\"QuickNav_quicklistBtn__QuV_v\",\"resetBtn\":\"QuickNav_resetBtn__3bwlD\",\"downloadBtn\":\"QuickNav_downloadBtn__2G2kR\",\"container\":\"QuickNav_container__l5Pvl\",\"tabs\":\"QuickNav_tabs__3J0_z\",\"boxes\":\"QuickNav_boxes__YONNh\",\"quicklistPic\":\"QuickNav_quicklistPic__3rgER\",\"listactive\":\"QuickNav_listactive__AdGi2\",\"inputs\":\"QuickNav_inputs__3PQkq\",\"hide\":\"QuickNav_hide__DLvJ0\",\"list\":\"QuickNav_list__2T2H9\",\"fontContainer\":\"QuickNav_fontContainer__1vzeG\",\"wrapper1\":\"QuickNav_wrapper1__1mEwe\",\"wrapper2\":\"QuickNav_wrapper2__1cfzo\",\"wrapper3\":\"QuickNav_wrapper3__3PgXi\",\"wrapper4\":\"QuickNav_wrapper4__1veXk\",\"indieFlower\":\"QuickNav_indieFlower__1V2pg\",\"kaushanScript\":\"QuickNav_kaushanScript__3yoKQ\",\"pacifico\":\"QuickNav_pacifico__3IzQt\",\"homemadeApple\":\"QuickNav_homemadeApple__yhRXr\",\"wallpoet\":\"QuickNav_wallpoet__1xbt0\",\"robotoMono\":\"QuickNav_robotoMono__2gADR\",\"bebasNeue\":\"QuickNav_bebasNeue__1b4c1\",\"monoton\":\"QuickNav_monoton__2gRu5\",\"bangers\":\"QuickNav_bangers__1VqLS\",\"piedra\":\"QuickNav_piedra__6CQwd\",\"frederickaTheGreat\":\"QuickNav_frederickaTheGreat__34L0U\",\"vt323\":\"QuickNav_vt323__8is-p\",\"vastShadow\":\"QuickNav_vastShadow__OMEnI\",\"button\":\"QuickNav_button__1evMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forminp\":\"Form_forminp__3uDvA\",\"inputinp\":\"Form_inputinp__GJBmE\",\"graffitiText\":\"Form_graffitiText__pOO0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__27QFJ\",\"quotes\":\"Header_quotes__34L-N\",\"img\":\"Header_img__21Pvn\",\"titleFlex\":\"Header_titleFlex__2NFbt\",\"graffitiText\":\"Header_graffitiText__6z98G\",\"quotemark\":\"Header_quotemark__1TIPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__2dajL\"};","module.exports = __webpack_public_path__ + \"static/media/trump-lightning.35210047.gif\";","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const StateContext = createContext({});\n\nexport default function StateContextProvider({ children }) {\n  const [theme, setTheme] = useState(\"light\");\n  const [picdatanew, setPicdatanew] = useState([]);\n  const [quotenew, setQuotenew] = useState([]);\n  const [picID, setPicID] = useState(0);\n  const [randomQuoteName, setRandomQuoteName] = useState(\"\");\n  const [pers, setPers] = useState(false);\n  const [grafitiParam, setGrafitiParam] = useState({\n    Color: \"#FFFF00\",\n    Width: 10,\n  });\n  const [textParam, setTextParam] = useState({\n    textColor: \"#FFFFFF\",\n    fontSize: 40,\n    blurWidth: 10,\n    blurColor: \"#000000\",\n    threeDColor: \"#737a75\",\n    font: \"Arial\",\n  });\n  const [textInput, setTextInput] = useState({ toptext: \"\", bottomtext: \"\" });\n  const [myImage, setMyImage] = useState();\n  const [canvasClear, setCanvasClear] = useState(false);\n\n  useEffect(() => {\n    fetch(\n      \"https://pixabay.com/api/?key=17706064-dbf47c15f3ffee1df9f90dd47&q=donald+trump&image_type=all&per_page=200\"\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (rep) {\n        const memes = rep.hits;\n        setPicdatanew(memes);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"https://api.whatdoestrumpthink.com/api/v1/quotes\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (rep) {\n        setQuotenew(rep);\n      });\n  }, []);\n\n  return (\n    <StateContext.Provider\n      value={{\n        picdatanew,\n        quotenew,\n        picID,\n        setPicID,\n        grafitiParam,\n        setGrafitiParam,\n        textParam,\n        setTextParam,\n        theme,\n        setTheme,\n        textInput,\n        setTextInput,\n        pers,\n        setPers,\n        randomQuoteName,\n        setRandomQuoteName,\n        myImage,\n        setMyImage,\n        canvasClear,\n        setCanvasClear,\n      }}\n    >\n      {children}\n    </StateContext.Provider>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { StateContext } from \"../statecontext/stateContext\";\nimport Styles from \"./Header.module.css\";\n\nexport default function Header() {\n  const { quotenew } = useContext(StateContext);\n  const [singquote, setSingquote] = useState();\n\n  useEffect(() => {\n    singlequote();\n    function singlequote() {\n      if (quotenew.length !== 0) {\n        const long = quotenew.messages.non_personalized.length - 1;\n        const randomnume = Math.floor(Math.random() * long);\n        setSingquote(quotenew.messages.non_personalized[randomnume]);\n        setInterval(() => {\n          const randomnum = Math.floor(Math.random() * long);\n          setSingquote(quotenew.messages.non_personalized[randomnum]);\n        }, 30000);\n      }\n    }\n  }, [quotenew]);\n\n  return (\n    <div className={Styles.container}>\n      <div className={Styles.titleFlex}>\n        <img\n          src={require(\"../../assets/trump-lightning.gif\")}\n          alt=\"trump\"\n          className={Styles.img}\n        />\n        <h1>\n          Trump <span className={Styles.graffitiText}>GRAFFITI</span> Memes\n        </h1>\n      </div>\n      {/* <h3 className={Styles.quotes}>\n        <span className={Styles.quotemark}>\" </span>\n        {singquote}\n        <span className={Styles.quotemark}> \"</span>\n      </h3> */}\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { StateContext } from \"../statecontext/stateContext\";\nimport Styles from \"./QuickNav.module.css\";\nimport \"react-tabs/style/react-tabs.css\";\n\nfunction HideAndShowDivOnClick() {\n  const {\n    picdatanew,\n    setPicID,\n    grafitiParam,\n    setGrafitiParam,\n    textParam,\n    setTextParam,\n    myImage,\n    canvasClear,\n    setCanvasClear,\n  } = useContext(StateContext);\n  const [showDiv, setShowDiv] = useState(false);\n  const [chips, setChips] = useState();\n\n  function getInfo(e) {\n    setPicID(e.target.id);\n  }\n\n  useEffect(() => {\n    if (picdatanew !== undefined) {\n      setChips(\n        picdatanew.map((v, i) => (\n          <img\n            key={i}\n            id={i}\n            onClick={getInfo}\n            type=\"image\"\n            src={v.previewURL}\n            alt=\"choice image\"\n            className={Styles.quicklistPic}\n          />\n        ))\n      );\n    }\n  }, [picdatanew]);\n\n  return (\n    <div className={Styles.quicklistContainer}>\n      <button\n        className={Styles.quicklistBtn}\n        onClick={() => setShowDiv(!showDiv)}\n      >\n        {showDiv ? \"Hide\" : \"Edit\"}\n      </button>\n\n      <button\n        className={Styles.resetBtn}\n        onClick={() => setCanvasClear(!canvasClear)}\n      >\n        Reset\n      </button>\n\n      <a download=\"meme.jpg\" href={myImage}>\n        <button className={Styles.downloadBtn}>Download</button>\n      </a>\n\n      {showDiv && (\n        <Tabs className={Styles.tabs}>\n          <TabList>\n            <Tab>Donald</Tab>\n            <Tab>Text</Tab>\n            <Tab>Font</Tab>\n            <Tab>Graffiti</Tab>\n          </TabList>\n\n          <TabPanel>\n            {/* <ul className=\"quicklist-content\">{chips}</ul> */}\n            <ul className={Styles.quicklistContent}>{chips}</ul>\n          </TabPanel>\n          <TabPanel>\n            <div className={Styles.container}>\n              <div className={Styles.boxes}>\n                <input\n                  className={Styles.inputs}\n                  type=\"color\"\n                  value={textParam.textColor}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, textColor: e.target.value })\n                  }\n                />\n                <label>TEXT COLOR</label>\n              </div>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"color\"\n                  className={Styles.inputs}\n                  value={textParam.blurColor}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, blurColor: e.target.value })\n                  }\n                />\n                <label>BLUR COLOR</label>\n              </div>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"color\"\n                  className={Styles.inputs}\n                  value={textParam.threeDColor}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, threeDColor: e.target.value })\n                  }\n                />\n                <label>3D COLOR</label>\n              </div>\n\n              <div className={Styles.boxes}>\n                <input\n                  type=\"range\"\n                  className={Styles.inputs}\n                  value={textParam.fontSize}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, fontSize: e.target.value })\n                  }\n                  min=\"10\"\n                  max=\"50\"\n                />\n                <label>FONT SIZE: {textParam.fontSize}px</label>\n              </div>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"range\"\n                  className={Styles.inputs}\n                  value={textParam.blurWidth}\n                  onChange={(e) =>\n                    setTextParam({ ...textParam, blurWidth: e.target.value })\n                  }\n                  min=\"0\"\n                  max=\"40\"\n                />\n                <label>BLUR WIDTH: {textParam.blurWidth}</label>\n              </div>\n            </div>\n          </TabPanel>\n          <TabPanel>\n            <div className={Styles.fontContainer}>\n              <div className={Styles.wrapper1}>\n                <p\n                  className={Styles.psize}\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Indie Flower\" })\n                  }\n                  className={Styles.indieFlower}\n                >\n                  Indie Flower\n                </p>\n                <p\n                  className={Styles.psize}\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Kaushan Script\" })\n                  }\n                  className={Styles.kaushanScript}\n                >\n                  Kaushan Script\n                </p>\n                <p\n                  className={Styles.psize}\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Pacifico\" })\n                  }\n                  className={Styles.pacifico}\n                >\n                  Pacifico\n                </p>\n              </div>\n\n              <div className={Styles.wrapper2}>\n                <p\n                  onClick={() => setTextParam({ ...textParam, font: \"VT323\" })}\n                  className={Styles.vt323}\n                >\n                  VT323\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Wallpoet\" })\n                  }\n                  className={Styles.wallpoet}\n                >\n                  Wallpoet\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Bebas Neue\" })\n                  }\n                  className={Styles.bebasNeue}\n                >\n                  Bebas Neue\n                </p>\n              </div>\n              <div className={Styles.wrapper3}>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Monoton\" })\n                  }\n                  className={Styles.monoton}\n                >\n                  Monoton\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Bangers\" })\n                  }\n                  className={Styles.bangers}\n                >\n                  Bangers\n                </p>\n                <p\n                  onClick={() => setTextParam({ ...textParam, font: \"Piedra\" })}\n                  className={Styles.piedra}\n                >\n                  Piedra\n                </p>\n              </div>\n              <div className={Styles.wrapper4}>\n                <p\n                  onClick={() =>\n                    setTextParam({\n                      ...textParam,\n                      font: \"Fredericka the Great\",\n                    })\n                  }\n                  className={Styles.frederickaTheGreat}\n                >\n                  Fredericka the Great\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Homemade Apple\" })\n                  }\n                  className={Styles.homemadeApple}\n                >\n                  Homemade Apple\n                </p>\n                <p\n                  onClick={() =>\n                    setTextParam({ ...textParam, font: \"Vast Shadow\" })\n                  }\n                  className={Styles.vastShadow}\n                >\n                  {\" \"}\n                  Vast Shadow\n                </p>\n              </div>\n              {/* </ul> */}\n            </div>\n          </TabPanel>\n          <TabPanel>\n            <div className={Styles.container}>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"color\"\n                  className={Styles.inputs}\n                  value={grafitiParam.Color}\n                  onChange={(e) =>\n                    setGrafitiParam({ ...grafitiParam, Color: e.target.value })\n                  }\n                />\n                <label>Grafiti COLOR</label>\n              </div>\n              <div className={Styles.boxes}>\n                <input\n                  type=\"range\"\n                  className={Styles.inputs}\n                  value={grafitiParam.Width}\n                  onChange={(e) =>\n                    setGrafitiParam({ ...grafitiParam, Width: e.target.value })\n                  }\n                  min=\"1\"\n                  max=\"40\"\n                />\n                <label>Grafiti WIDTH: {grafitiParam.Width}</label>\n              </div>\n            </div>\n          </TabPanel>\n        </Tabs>\n      )}\n    </div>\n  );\n}\n\nexport default HideAndShowDivOnClick;\n","import React, { useRef, useEffect, useState, useContext } from \"react\";\nimport Styles from \"./Canvas.module.css\";\nimport { StateContext } from \"../statecontext/stateContext\";\n\nexport default function Canvas() {\n  const {\n    picdatanew,\n    quotenew,\n    picID,\n    grafitiParam,\n    textParam,\n    textInput,\n    setTextInput,\n    pers,\n    setPers,\n    randomQuoteName,\n    setMyImage,\n    canvasClear,\n  } = useContext(StateContext);\n  const contextRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [canvassize, setCanvasSize] = useState({ width: 800, height: 800 });\n\n  const [picturedata, setPicturedata] = useState();\n  const [lined, setLined] = useState([]);\n  const [wholedata, setWholedata] = useState([]);\n  const [startpos, setStartpos] = useState([]);\n  const [singleQ, setSingleQ] = useState(\"\");\n  const [mouseTouch, setMouseTouch] = useState(true);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    contextRef.current = context;\n    contextRef.current.font = \"bold 20px Roman\";\n  }, []);\n\n  //show the selected picture\n  useEffect(() => {\n    const img = new Image();\n    if (picdatanew.length !== 0) {\n      img.src = picdatanew[picID].webformatURL;\n      img.setAttribute(\"crossorigin\", \"anonymous\");\n      setCanvasSize({\n        width: picdatanew[picID].webformatWidth,\n        height: picdatanew[picID].webformatHeight,\n      });\n      setPicturedata(img);\n      setWholedata([]);\n\n      setTimeout(() => {\n        contextRef.current.drawImage(\n          img,\n          0,\n          0,\n          picdatanew[picID].webformatWidth,\n          picdatanew[picID].webformatHeight\n        );\n        var image = canvasRef.current.toDataURL(\"image/jpg\");\n        setMyImage(image);\n      }, 2000);\n    }\n  }, [picID, picdatanew]);\n\n  // draw, set a starting point and an end point\n  const startDrawing = ({ nativeEvent }) => {\n    contextRef.current.strokeStyle = grafitiParam.Color;\n    contextRef.current.lineWidth = grafitiParam.Width;\n    contextRef.current.shadowBlur = 0;\n    contextRef.current.lineCap = \"round\";\n    contextRef.current.beginPath();\n    const LineColor = grafitiParam.Color;\n    const LineWidth = grafitiParam.Width;\n    setIsDrawing(true);\n    setStartpos([]);\n    setLined([]);\n\n    var sizechange = 1;\n    if (window.innerWidth < canvassize.width) {\n      sizechange = canvassize.width / window.innerWidth;\n    } else {\n      sizechange = 1;\n    }\n\n    if (mouseTouch) {\n      const { offsetX, offsetY } = nativeEvent;\n      const xy = [offsetX, offsetY, LineColor, LineWidth];\n      contextRef.current.moveTo(xy[0], xy[1]);\n      setStartpos((previous) => [...previous, xy]);\n    } else {\n      const nn = nativeEvent.targetTouches[0];\n      const xy = [\n        sizechange * (nn.pageX - nn.target.offsetLeft),\n        sizechange * (nn.pageY - nn.target.offsetTop),\n        LineColor,\n        LineWidth,\n      ];\n      contextRef.current.moveTo(xy[0], xy[1]);\n      setStartpos((previous) => [...previous, xy]);\n    }\n  };\n\n  // folow the cursor and draw\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n    var sizechange = 1;\n    if (window.innerWidth < canvassize.width) {\n      sizechange = canvassize.width / window.innerWidth;\n    } else {\n      sizechange = 1;\n    }\n\n    if (mouseTouch) {\n      const { offsetX, offsetY } = nativeEvent;\n      contextRef.current.lineTo(offsetX, offsetY);\n      const fishX = { offsetX, offsetY };\n      setLined((gp) => [...gp, fishX]);\n    } else {\n      const offsetX =\n        sizechange *\n        (nativeEvent.targetTouches[0].pageX -\n          nativeEvent.targetTouches[0].target.offsetLeft);\n      const offsetY =\n        sizechange *\n        (nativeEvent.targetTouches[0].pageY -\n          nativeEvent.targetTouches[0].target.offsetTop);\n      contextRef.current.lineTo(offsetX, offsetY);\n      const fishX = { offsetX, offsetY };\n      setLined((gp) => [...gp, fishX]);\n    }\n    contextRef.current.stroke();\n  };\n\n  //finish the drawing process and construct the data Array\n  const finishDrawing = () => {\n    const newStartStop = { movT: startpos, lineT: lined };\n    setWholedata((ln) => [...ln, newStartStop]);\n    setIsDrawing(false);\n    var image = canvasRef.current.toDataURL(\"image/jpg\");\n    setMyImage(image);\n  };\n\n  //function generater(){\n  useEffect(() => {\n    if (textInput.toptext.length !== 0 || textInput.bottomtext.length !== 0) {\n      contextRef.current.font =\n        \"bold \" + textParam.fontSize + \"px \" + textParam.font;\n      const longtop = Math.floor(\n        contextRef.current.measureText(textInput.toptext).width\n      );\n      const starttop = canvassize.width / 2 - longtop / 2;\n      const longbottom = Math.floor(\n        contextRef.current.measureText(textInput.bottomtext).width\n      );\n      const startbottom = canvassize.width / 2 - longbottom / 2;\n\n      contextRef.current.clearRect(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n      );\n      contextRef.current.drawImage(picturedata, 0, 0);\n\n      drawagainline();\n\n      function drawagainline() {\n        contextRef.current.shadowBlur = 0;\n        var z;\n        for (z = 0; z < wholedata.length; z++) {\n          contextRef.current.lineWidth = wholedata[z].movT[0][3];\n          contextRef.current.strokeStyle = wholedata[z].movT[0][2];\n          contextRef.current.lineCap = \"round\";\n          contextRef.current.beginPath();\n\n          var i;\n          contextRef.current.moveTo(\n            wholedata[z].movT[0][0],\n            wholedata[z].movT[0][1]\n          );\n\n          for (i = 0; i < wholedata[z].lineT.length; i++) {\n            contextRef.current.lineTo(\n              wholedata[z].lineT[i].offsetX,\n              wholedata[z].lineT[i].offsetY\n            );\n            contextRef.current.stroke();\n          }\n        }\n      }\n\n      contextRef.current.shadowColor = textParam.blurColor;\n      contextRef.current.shadowBlur = textParam.blurWidth;\n      contextRef.current.fillStyle = \"black\";\n      contextRef.current.fillText(\n        textInput.toptext,\n        starttop + 6,\n        50 + 6,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.bottomtext,\n        startbottom + 6,\n        canvassize.height - 44,\n        canvassize.width - 30\n      );\n      contextRef.current.fillStyle = textParam.threeDColor;\n      contextRef.current.fillText(\n        textInput.toptext,\n        starttop + 4,\n        50 + 4,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.toptext,\n        starttop + 2,\n        50 + 2,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.bottomtext,\n        startbottom + 4,\n        canvassize.height - 46,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.bottomtext,\n        startbottom + 2,\n        canvassize.height - 48,\n        canvassize.width - 30\n      );\n      contextRef.current.fillStyle = textParam.textColor;\n      contextRef.current.fillText(\n        textInput.toptext,\n        starttop,\n        50,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        textInput.bottomtext,\n        startbottom,\n        canvassize.height - 50,\n        canvassize.width - 30\n      );\n    }\n    var image = canvasRef.current.toDataURL(\"image/jpg\");\n    setMyImage(image);\n  }, [textInput, textParam]);\n\n  //generate the random text\n  useEffect(() => {\n    if (quotenew.length !== 0) {\n      retry();\n    }\n\n    function retry() {\n      const lengt = quotenew.messages.personalized.length;\n      const randomnum = Math.floor(Math.random() * lengt - 1);\n      const singleq = quotenew.messages.personalized[randomnum];\n\n      contextRef.current.font = \"bold 50px \" + textParam.font;\n      const message = randomQuoteName + \" \" + singleq;\n      const long = Math.floor(contextRef.current.measureText(message).width);\n      contextRef.current.font =\n        \"bold \" + textParam.fontSize + \"px \" + textParam.font;\n\n      if (long < canvassize.width) {\n        setSingleQ(singleq);\n        drawforrandom(singleq);\n        //setPers(false)\n        setTextInput({ toptext: \"\", bottomtext: \"\" });\n      } else {\n        retry();\n      }\n    }\n  }, [pers]);\n\n  // allow text modification of the random quote\n  useEffect(() => {\n    if (textInput.toptext.length === 0 && textInput.bottomtext.length === 0) {\n      contextRef.current.font =\n        \"bold \" + textParam.fontSize + \"px \" + textParam.font;\n      drawforrandom(singleQ);\n    }\n  }, [textInput, textParam]);\n\n  // put the generated text on the canvas\n  function drawforrandom(singleq) {\n    if (picturedata !== undefined || singleQ !== \"\") {\n      contextRef.current.font =\n        \"bold \" + textParam.fontSize + \"px \" + textParam.font;\n      const message = randomQuoteName + \" \" + singleq;\n      const long = Math.floor(contextRef.current.measureText(message).width);\n      const start = canvassize.width / 2 - long / 2;\n      const starth = 50;\n      contextRef.current.clearRect(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n      );\n      contextRef.current.drawImage(picturedata, 0, 0);\n\n      drawagain();\n      function drawagain() {\n        contextRef.current.shadowBlur = 0;\n        contextRef.current.lineWidth = 10;\n        if (wholedata.length !== 0) {\n          var z;\n          for (z = 0; z < wholedata.length; z++) {\n            contextRef.current.lineWidth = wholedata[z].movT[0][3];\n            contextRef.current.strokeStyle = wholedata[z].movT[0][2];\n            contextRef.current.lineCap = \"round\";\n\n            contextRef.current.beginPath();\n\n            var i;\n            contextRef.current.moveTo(\n              wholedata[z].movT[0][0],\n              wholedata[z].movT[0][1]\n            );\n\n            for (i = 0; i < wholedata[z].lineT.length; i++) {\n              contextRef.current.lineTo(\n                wholedata[z].lineT[i].offsetX,\n                wholedata[z].lineT[i].offsetY\n              );\n            }\n            contextRef.current.stroke();\n          }\n        }\n      }\n      contextRef.current.shadowColor = textParam.blurColor;\n      contextRef.current.shadowBlur = textParam.blurWidth;\n      contextRef.current.fillStyle = \"black\";\n      contextRef.current.fillText(\n        randomQuoteName + \" \" + singleq,\n        start + 6,\n        starth + 6,\n        canvassize.width - 30\n      );\n      contextRef.current.fillStyle = textParam.threeDColor;\n      contextRef.current.fillText(\n        randomQuoteName + \" \" + singleq,\n        start + 4,\n        starth + 4,\n        canvassize.width - 30\n      );\n      contextRef.current.fillText(\n        randomQuoteName + \" \" + singleq,\n        start + 2,\n        starth + 2,\n        canvassize.width - 30\n      );\n\n      contextRef.current.fillStyle = textParam.textColor;\n      contextRef.current.fillText(\n        randomQuoteName + \" \" + singleq,\n        start,\n        starth,\n        canvassize.width - 30\n      );\n\n      var image = canvasRef.current.toDataURL(\"image/jpg\");\n      setMyImage(image);\n    }\n  }\n\n  useEffect(() => {\n    if (picturedata !== undefined) {\n      contextRef.current.clearRect(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n      );\n      contextRef.current.drawImage(picturedata, 0, 0);\n      setTextInput({ toptext: \"\", bottomtext: \"\" });\n      setWholedata([]);\n      setStartpos([]);\n      setLined([]);\n      setSingleQ(\"\");\n    }\n  }, [canvasClear]);\n\n  return (\n    <div className={Styles.canvasContainer}>\n      <canvas\n        ref={canvasRef}\n        onMouseDown={(e) => {\n          startDrawing(e);\n          document.getElementsByTagName(\"body\")[0].style = \"overflow: visible\";\n          setMouseTouch(true);\n        }}\n        onMouseUp={(e) => {\n          finishDrawing(e);\n          document.getElementsByTagName(\"body\")[0].style = \"overflow: visible\";\n          setMouseTouch(true);\n        }}\n        onMouseMove={(e) => {\n          draw(e);\n          setMouseTouch(true);\n        }}\n        onTouchStart={(e) => {\n          startDrawing(e);\n          document.getElementsByTagName(\"body\")[0].style = \"overflow: hidden\";\n          setMouseTouch(false);\n        }}\n        onTouchEnd={(e) => {\n          finishDrawing(e);\n          document.getElementsByTagName(\"body\")[0].style = \"overflow: visible\";\n          setMouseTouch(false);\n        }}\n        onTouchMove={(e) => {\n          draw(e);\n          setMouseTouch(false);\n        }}\n        width={canvassize.width}\n        height={canvassize.height}\n        className={Styles.canvas}\n      ></canvas>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Styles from \"./Form.module.css\";\nimport { StateContext } from \"../statecontext/stateContext\";\n\nexport default function Form() {\n  const {\n    textInput,\n    setTextInput,\n    pers,\n    setPers,\n    setRandomQuoteName,\n  } = useContext(StateContext);\n\n  return (\n    <div>\n      <form className={Styles.forminp}>\n        <h4>Great memes start with funny text!</h4>\n        <input\n          className={Styles.inputinp}\n          type=\"text\"\n          name=\"topText\"\n          placeholder=\"Enter your\"\n          onChange={(e) =>\n            setTextInput({ ...textInput, toptext: e.target.value })\n          }\n        />\n        <input\n          className={Styles.inputinp}\n          type=\"text\"\n          name=\"bottomText\"\n          placeholder=\"Text here\"\n          onChange={(e) =>\n            setTextInput({ ...textInput, bottomtext: e.target.value })\n          }\n        />\n      </form>\n      <div>\n        <h4>or.. add a random quote</h4>\n        <input\n          type=\"text\"\n          placeholder=\"Enter *name* for quote here\"\n          className={Styles.inputinp}\n          onChange={(e) => setRandomQuoteName(e.target.value)}\n        />\n        <button\n          onClick={() => {\n            setPers(!pers);\n          }}\n        >\n          Generate\n        </button>\n        <p>\n          (Pssst... Don't forget to{\" \"}\n          <span className={Styles.graffitiText}>DRAW ON DONALD</span>!)\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { StateContext } from \"../statecontext/stateContext\";\nimport Styles from \"./Toolbar.module.css\";\n\nexport default function ToolBar() {\n  const { theme, setTheme } = useContext(StateContext);\n\n  const setNewTheme = (themeName) => {\n    setTheme(themeName);\n  };\n\n  return (\n    <div className={Styles.Toolbar}>\n      {theme === \"light\" ? (\n        <button\n          // type=\"image\"\n          className={theme === \"dark\" ? Styles.active : \"\"}\n          onClick={() => setNewTheme(\"dark\")}\n        >\n          🌙\n        </button>\n      ) : (\n        <button\n          // type=\"image\"\n          className={theme === \"light\" ? Styles.active : \"\"}\n          onClick={() => setNewTheme(\"light\")}\n        >\n          💡\n        </button>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport Header from \"./components/header/Header\";\nimport QuickNav from \"./components/quicknav/QuickNav\";\nimport Canvas from \"./components/canvas/Canvas\";\nimport Form from \"./components/form/Form\";\nimport ToolBar from \"./components/toolbar/Toolbar\";\nimport { StateContext } from \"./components/statecontext/stateContext\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const { theme } = useContext(StateContext);\n\n  return (\n    <div id=\"main\" className={`App ${theme}`}>\n      <div className=\"flex-header-container\">\n        <Header className=\"flex-header-left\" />\n        <ToolBar />\n      </div>\n      <div className=\"flex-body-container\">\n        <Form className=\"flex-wrapper-left\" />\n        <Canvas className=\"flex-wrapper-right\" />\n      </div>\n      <QuickNav />\n      <div className=\"yellowBanner\">\n        <p>\n          Share your memes on{\" \"}\n          <a href=\"https://twitter.com/hashtag/trumpgraffitimemes\">\n            #trumpgraffitimemes\n          </a>{\" \"}\n          and please don't forget to vote on <span>3rd November 2020</span>!\n        </p>\n        <p className=\"privacyAndInfo\">\n          ❤️{\" \"}\n          <a href=\"https://github.com/trumpgraffitimemes/generator/blob/master/README.md\">\n            Attribution\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport StateContextProvider from \"./components/statecontext/stateContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateContextProvider>\n        <App />\n    </StateContextProvider>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}